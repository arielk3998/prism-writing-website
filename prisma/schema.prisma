// Prism Writing Platform - Database Schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// User Management
model User {
  id              String    @id @default(cuid())
  email           String    @unique
  username        String?   @unique
  firstName       String?
  lastName        String?
  passwordHash    String
  role            String    @default("MEMBER") // SUPER_ADMIN, ADMIN, EDITOR, MEMBER, CLIENT, VIEWER
  status          String    @default("ACTIVE") // ACTIVE, INACTIVE, SUSPENDED, PENDING_VERIFICATION
  emailVerified   DateTime?
  lastLogin       DateTime?
  loginAttempts   Int       @default(0)
  lockoutUntil    DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Relations
  sessions        Session[]
  projects        Project[]
  projectMembers  ProjectMember[]
  tasks           Task[]
  content         Content[]

  @@map("users")
}

// Session Management
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

// Project Management
model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  status      String   @default("PLANNING") // PLANNING, IN_PROGRESS, REVIEW, COMPLETED, CANCELLED
  priority    String   @default("MEDIUM")    // LOW, MEDIUM, HIGH, URGENT
  budget      Float?
  startDate   DateTime?
  endDate     DateTime?
  creatorId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  creator     User            @relation(fields: [creatorId], references: [id])
  members     ProjectMember[]
  tasks       Task[]

  @@map("projects")
}

model ProjectMember {
  id        String   @id @default(cuid())
  projectId String
  userId    String
  role      String   @default("MEMBER") // OWNER, ADMIN, EDITOR, MEMBER, VIEWER
  joinedAt  DateTime @default(now())

  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([projectId, userId])
  @@map("project_members")
}

// Task Management
model Task {
  id             String    @id @default(cuid())
  title          String
  description    String?
  status         String    @default("TODO") // TODO, IN_PROGRESS, REVIEW, COMPLETED, CANCELLED
  priority       String    @default("MEDIUM") // LOW, MEDIUM, HIGH, URGENT
  projectId      String
  assigneeId     String?
  dueDate        DateTime?
  completedAt    DateTime?
  estimatedHours Float?
  actualHours    Float?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  project  Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  assignee User?   @relation(fields: [assigneeId], references: [id])

  @@map("tasks")
}

// Content Management
model Content {
  id              String    @id @default(cuid())
  title           String
  slug            String    @unique
  content         String
  excerpt         String?
  type            String    @default("ARTICLE") // ARTICLE, PAGE, BLOG_POST, DOCUMENTATION
  status          String    @default("DRAFT")   // DRAFT, PUBLISHED, ARCHIVED
  authorId        String
  publishedAt     DateTime?
  metaTitle       String?
  metaDescription String?
  tags            String?
  category        String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  author User @relation(fields: [authorId], references: [id])

  @@map("content")
}

// Newsletter System
model NewsletterSubscriber {
  id             String    @id @default(cuid())
  email          String    @unique
  status         String    @default("ACTIVE") // ACTIVE, UNSUBSCRIBED, BOUNCED
  source         String?
  subscribedAt   DateTime  @default(now())
  unsubscribedAt DateTime?
  tags           String?

  @@map("newsletter_subscribers")
}

model NewsletterCampaign {
  id          String   @id @default(cuid())
  name        String
  subject     String
  content     String
  status      String   @default("DRAFT") // DRAFT, SENT, SCHEDULED, CANCELLED
  scheduledAt DateTime?
  sentAt      DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("newsletter_campaigns")
}

// Notification System
model NotificationPreference {
  id             String  @id @default(cuid())
  userId         String  @unique
  emailEnabled   Boolean @default(true)
  pushEnabled    Boolean @default(false)
  projectUpdates Boolean @default(true)
  taskReminders  Boolean @default(true)
  invoiceUpdates Boolean @default(true)
  systemAlerts   Boolean @default(true)
  marketing      Boolean @default(false)

  @@map("notification_preferences")
}

// Financial Management
model Account {
  id              String  @id @default(cuid())
  accountNumber   String  @unique
  accountName     String
  accountType     String  // ASSET, LIABILITY, EQUITY, REVENUE, EXPENSE
  accountCategory String
  description     String?
  balance         Float   @default(0)
  isActive        Boolean @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("accounts")
}
